---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from 'src/utils/cn';

const linkVariants = cva('link', {
  variants: {
    variant: {
      primary: [
        'bg-transparent',
        'text-primary',
        'border-transparent',
        'hover:bg-blue-600',
      ],
      secondary: [
        'bg-fuchsia-500',
        'text-gray-800',
        'border-gray-400',
        'hover:bg-gray-100',
      ],
    },
    size: {
      small: ['text-sm', 'py-1', 'px-2'],
      medium: ['text-base', 'py-2', 'px-4'],
    },
  },
  compoundVariants: [
    { variant: 'primary', size: 'medium', class: 'uppercase' },
  ],
});

export type LinkProps = HTMLAttributes<'a'> & VariantProps<typeof linkVariants>;
interface Props extends LinkProps {}

/**
 * For Astro components, we recommend setting your defaultVariants within
 * Astro.props (which are `undefined` by default)
 */
const {
  class: className,
  variant = 'primary',
  size = 'medium',
  href,
  ...props
} = Astro.props;
---

<a
  href={href}
  class={cn(linkVariants({ variant, size }), 'block', className)}
  {...props}
>
  <slot />
</a>

<script></script>
