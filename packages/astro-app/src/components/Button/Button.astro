---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from 'src/utils/cn';

const buttonVariants = cva('', {
  variants: {
    variant: {
      default: [
        'inline-block',
        'text-accent',
        'font-semibold',
        'rounded-md',
        'border-comic',
        'border-transparent',
        'transition-all',
        'hover:text-accent-700',
        'active:text-accent-700',
        'hover:border-accent-700',
        'active:border-accent-700',
      ],
      contained: [
        'inline-block',
        'text-primary',
        'font-semibold',
        'bg-accent',
        'rounded-md',
        'border-comic',
        'border-secondary',
        'shadow-comic',
        'shadow-secondary',
        '-translate-x-0.5',
        '-translate-y-0.5',
        'transition-all',
        'hover:bg-accent-700',
        'active:bg-accent-700',
        'hover:border-transparent',
        'active:border-transparent',
        'hover:translate-x-0',
        'active:translate-x-0',
        'hover:translate-y-0',
        'active:translate-y-0',
        'hover:scale-95',
        'active:scale-95',
        'hover:shadow-none',
        'active:shadow-none',
      ],
      outlined: [
        'inline-flex',
        'items-center',
        'relative',
        'text-accent',
        'font-semibold',
        'bg-transparent',
        'rounded-md',
        'border-comic',
        'border-accent',
        'transition-all',
        'overflow-hidden',
        'hover:text-primary',
        'active:text-primary',
        'hover:border-secondary',
        'active:border-secondary',
        'before:content-[""]',
        'before:absolute',
        'before:h-full',
        'before:w-full',
        'before:-z-10',
        'before:bg-accent-700',
        'before:transition-transform',
        'before:duration-[0.15s]',
        'before:ease-in-out',
        'before:-translate-x-full',
        'hover:before:-translate-x-4',
        'active:before:-translate-x-4',
      ],
      unstyled: [],
    },
    size: {
      small: ['text-sm'],
      medium: ['text-base'],
    },
  },
  defaultVariants: {
    variant: 'default',
    size: 'medium',
  },
  compoundVariants: [
    {
      variant: ['default', 'contained', 'outlined'],
      size: 'small',
      class: 'py-1 px-2',
    },
    {
      variant: ['default', 'contained', 'outlined'],
      size: 'medium',
      class: 'py-2 px-4',
    },
    {
      variant: ['outlined'],
      size: 'medium',
      class: 'before:-translate-x-[calc(100%+0.5rem)]',
    },
    {
      variant: ['outlined'],
      size: 'medium',
      class: 'before:-translate-x-[calc(100%+1rem)]',
    },
  ],
});

export type ButtonProps = HTMLAttributes<'button'> &
  VariantProps<typeof buttonVariants>;

interface Props extends ButtonProps {}

/**
 * For Astro components, we recommend setting your defaultVariants within
 * Astro.props (which are `undefined` by default)
 */
const { class: className, variant, size, ...props } = Astro.props;
---

<button class={cn(buttonVariants({ variant, size }), className)} {...props}>
  <slot />
</button>
