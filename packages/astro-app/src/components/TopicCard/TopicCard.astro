---
import { Card } from '@components/Card';
import { Link } from '@components/Link';
import { cn } from '@utils/cn';
import type { HTMLAttributes } from 'astro/types';
import { Image } from 'astro:assets';

export type TopicCardProps = HTMLAttributes<'a'> &
  (
    | {
        title: string;
        titleBackgroundColor?: `#${string}` | 'transparent';
        imageSrc?: undefined;
        imageAlt?: undefined;
        loading?: undefined;
        decoding?: undefined;
        slug: string;
      }
    | {
        title?: undefined;
        titleBackgroundColor?: undefined;
        imageSrc: string;
        imageAlt: string;
        loading?: 'eager' | 'lazy';
        decoding?: 'async' | 'auto' | 'sync';
        slug: string;
      }
    | {
        title: string;
        titleBackgroundColor?: `#${string}` | 'transparent';
        imageSrc: string;
        imageAlt: string;
        loading?: 'eager' | 'lazy';
        decoding?: 'async' | 'auto' | 'sync';
        slug: string;
      }
  );

type Props = TopicCardProps;

const {
  title,
  class: className,
  titleBackgroundColor = 'transparent',
  decoding = 'auto',
  loading = 'eager',
  imageSrc,
  imageAlt,
  slug,
  ...props
}: Props = Astro.props;
---

<Link
  variant='unstyled'
  href={slug && `${import.meta.env.PUBLIC_BASE_SITE_URL}/topics/${slug}`}
  class={cn('', className)}
  {...props}
>
  <Card class='flex h-full flex-col'>
    {
      imageSrc ? (
        <Image
          src={imageSrc}
          alt={imageAlt}
          loading={loading}
          decoding={decoding}
          class='aspect-square w-full object-cover'
          width={200}
          height={200}
          densities={[1.5, 2]}
        />
      ) : null
    }
    {
      title ? (
        <h2 class='border-secondary border-4 border-x-0 p-2.5 text-center text-xl font-black'>
          {title.charAt(0).toUpperCase() + title.slice(1)}
        </h2>
      ) : null
    }
  </Card>
</Link>

<style define:vars={{ titleBackgroundColor }}>
  h2 {
    background-color: var(--titleBackgroundColor);
  }
</style>
