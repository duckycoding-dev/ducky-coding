---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from 'src/utils/cn';

const hamburgerToggleVariants = cva('', {
  variants: {
    variant: {
      default: 'bg-accent2',
    },
  },
  defaultVariants: {
    variant: 'default',
  },
  compoundVariants: [],
});

export type HamburgerToggleProps = VariantProps<typeof hamburgerToggleVariants>;

interface Props extends HTMLAttributes<'input'>, HamburgerToggleProps {}

const { variant, size, class: className } = Astro.props;
---

<input
  id='hamburgerCheckbox'
  type='checkbox'
  class={cn('block h-0 w-0 opacity-0 cursor-pointer', className)}
/>
<label for='hamburgerCheckbox' class={cn(className)}
  ><span class='relative'></span></label
>

<style>
  label {
    z-index: 1000;
    width: 40px;
    aspect-ratio: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  span,
  span::before,
  span::after {
    border-radius: 10px;
    background-color: black;
    height: 5px;
    width: 100%;
  }
  span::before {
    content: '';
    top: -10px;
    position: absolute;
  }
  span::after {
    content: '';
    bottom: -10px;
    position: absolute;
  }
</style>
