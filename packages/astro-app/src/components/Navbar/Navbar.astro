---
import { Link } from '@components/Link';
import type { HTMLAttributes } from 'astro/types';
import { cn } from '@utils/cn';
import DuckyCodingLogo from '@assets/images/DuckyCoding_logo.png';
import DefaultProfileIcon from '@assets/images/default_profile_icon.png';
import { Image } from 'astro:assets';
import { LogoutButton } from '@components/LogoutButton';
import { UserProfileIcon } from '../UserProfileIcon';

export interface NavbarProps {}

interface Props extends HTMLAttributes<'nav'>, NavbarProps {}

const { class: className, ...props }: Props = Astro.props;
---

<nav
  class={cn(
    'bg-primary-700 top-0 left-0 md:top-0 md:left-0 fixed md:static h-dvh w-full flex flex-col md:h-auto md:flex-row gap-x-8 px-8 md:px-0 pb-8 pt-16 md:py-0 max-w-96 gap-y-4 border-comic border-secondary md:border-none md:justify-end',
    className,
  )}
  {...props}
>
  <div
    class='flex shrink-0 items-center justify-start gap-4 font-semibold md:hidden'
  >
    <Image
      alt={'DuckyCoding logo'}
      src={DuckyCodingLogo}
      width={50}
      densities={[1.5, 2]}
      class='max-w-none'
    />
    <h2 class='text-primary text-3xl md:hidden lg:block'>DuckyCoding</h2>
  </div>
  <ul class='flex h-full flex-col gap-4 md:flex-row md:items-center'>
    <li>
      <Link
        href={'/'}
        class={'text-3xl md:text-base text-primary font-medium w-full'}
        >Home</Link
      >
    </li>
    <li>
      <Link
        href={'/topics'}
        size={'medium'}
        class={'text-3xl md:text-base text-primary font-medium w-full'}
        >Topics</Link
      >
    </li>
    <li>
      <Link
        href={'/components'}
        size={'medium'}
        class={'text-3xl md:text-base text-primary font-medium w-full'}
        >Components</Link
      >
    </li>
    <li>
      <LogoutButton variant={'default'} />
    </li>
  </ul>
  <div
    id='logged-user-avatar-navbar'
    class='mt-auto flex items-center gap-4 text-2xl md:hidden'
  >
    <UserProfileIcon server:defer id={'1'} width={50} height={50}>
      <Image
        id='user-profile-picture-navbar'
        alt={'Default profile icon'}
        src={DefaultProfileIcon}
        width={50}
      />
    </UserProfileIcon>
    <span class='md:hidden' id='username-in-navbar'></span>
  </div>
</nav>

{/* USABLE BUT NOT COMPLETED */}

<script>
  import type { UserVerificationEvent } from '../../types/events';

  const loggedUserAvatarNavbar: HTMLElement | null = document.querySelector(
    '#logged-user-avatar-navbar',
  );
  const usernameInNavbar = document.querySelector('#username-in-navbar');
  // const userProfilePictureNavbar = document.querySelector(
  //   '#user-profile-picture-navbar',
  // );

  if (loggedUserAvatarNavbar) {
    const userStringInLocalStorage = window.localStorage.getItem('user');
    if (
      userStringInLocalStorage !== 'checked' &&
      userStringInLocalStorage !== null
    ) {
      const user = JSON.parse(userStringInLocalStorage);
      // const profilePicture = JSON.parse(user.profilePicture);
      // if (userProfilePictureNavbar) {
      //   userProfilePictureNavbar.setAttribute(
      //     'src',
      //     `images/${profilePicture.path}`,
      //   );
      //   userProfilePictureNavbar.setAttribute(
      //     'alt',
      //     profilePicture.alt ?? 'User profile icon',
      //   );
      // }
      if (usernameInNavbar) {
        usernameInNavbar.textContent = `Hello ${user.username}! ðŸ‘‹`;
      }
      loggedUserAvatarNavbar.hidden = false;
      loggedUserAvatarNavbar.style.display = '';
    } else {
      loggedUserAvatarNavbar.hidden = true;
      loggedUserAvatarNavbar.style.display = 'none';
    }
  }

  function updateNavbarState(isLoggedIn: boolean): void {
    if (isLoggedIn) {
      if (loggedUserAvatarNavbar) {
        loggedUserAvatarNavbar.hidden = false;
        loggedUserAvatarNavbar.style.display = '';
        const userString = window.localStorage.getItem('user');
        if (userString) {
          const user = JSON.parse(userString);
          const profilePicture = JSON.parse(user.profilePicture);
          if (usernameInNavbar) {
            usernameInNavbar.textContent = `Hello ${user.username}! ðŸ‘‹`;
          }
          // Update the avatar with profilePicture data
          console.log(profilePicture);
        }
      }
    } else if (loggedUserAvatarNavbar) {
      loggedUserAvatarNavbar.hidden = true;
      loggedUserAvatarNavbar.style.display = 'none';
    }
  }

  window.addEventListener('userVerificationComplete', ((
    event: UserVerificationEvent,
  ) => {
    updateNavbarState(event.detail.isLoggedIn);
  }) as EventListener);
</script>
