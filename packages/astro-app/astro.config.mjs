import { defineConfig } from 'astro/config';
import mdx from '@astrojs/mdx';
import tailwind from '@astrojs/tailwind';
import sitemap from '@astrojs/sitemap';
import icon from 'astro-icon';
// import db from '@astrojs/db';
// properties without "--DEFAULT--" either use a setting decided by me or/and didn't have a default value

// https://astro.build/config
export default defineConfig({
  // Resolves to the "./public" directory, relative to this config file
  site: 'https://duckycoding.dev',
  publicDir: './public', // --DEFAULT--
  srcDir: './src', // --DEFAULT--
  outDir: './dist', // --DEFAULT--
  base: '/',
  trailingSlash: 'ignore', // --DEFAULT--
  output: 'hybrid',
  cacheDir: './.astro',
  compressHTML: true, // could be set to false in development using env variables
  scopedStyleStrategy: 'attribute', // --DEFAULT--
  build: {
    format: 'directory', // --DEFAULT--
    server: '.server_javascript', // relative to outDir
    client: './client_javascript_and_css', // relative to outDir
    assets: '_astro', // assets generated by Astro
    redirects: true, // --DEFAULT--
    inlineStylesheets: 'auto', // --DEFAULT-- - if css is small it gets inlined, else a css file is created
    // assetsPrefix: '', // TODO, not sure how to use it
    // serverEntry: , // TODO, not sure how to use it
  },
  server: ({ command }) => ({
    port: command === 'dev' ? 4321 : 1234,
    // host: command === 'dev' ? false : false, // exposes port on local ip address in preview mode
    open: false,
    headers: {}, // --DEFAULT--
  }),
  devToolbar: {
    enabled: false,
  }, // --DEFAULT--
  prefetch: {
    prefetchAll: true,
    defaultStrategy: 'hover', // --DEFAULT--
  },
  image: {
    endpoint: undefined, // --DEFAULT--, TODO, not sure how to use it
    service: {
      entrypoint: 'astro/assets/services/sharp',
      config: {
        limitInputPixels: false,
      },
    },
    domains: [], // --DEFAULT-- = no remote images will be optimized, TODO: if hosting images, will need to set this
    remotePatterns: [], // --DEFAULT--, TODO: if hosting images, will need to set this
  },
  markdown: {
    syntaxHighlight: 'shiki', // --DEFAULT--
    // shikiConfig: , // TODO
    // remarkPlugins: , // TODO
    // rehypePlugins: , // TODO
    // remarkRehype: , // TODO
    gfm: true, // --DEFAULT--
    smartypants: true, // --DEFAULT--
  },
  i18n: {
    defaultLocale: 'en',
    locales: ['en', 'it'],
    fallback: {
      it: 'en', // when italian page is missing, redirects to /en
      // if no fallback is found, pages return 404
    },
    routing: {
      prefixDefaultLocale: false, // --DEFAULT-- TODO: need to check if this allows for english for both cases .../en/about and .../about, or only for the latter
      // redirectToDefaultLocale: false, // this only works with prefixDefaultLocale set to true: if that's the case, having this set to false we can have a different homepage, for example for asking the user to select the language they want to use
    },
  },
  vite: {
    css: {
      // transformer: 'lightningcss', //TODO: uncomment this when moving to Tailwind v4.0: Tailwind v3 needs PostCSS to work (which is the default in Vite configs)
      devSourcemap: true,
      lightningcss: {
        // This one is left uncommented because it has no effect if transformer is not se to lightning CSS
        cssModules: {
          dashedIdents: false,
        },
      },
    },
    build: {
      cssMinify: 'lightningcss',
      sourcemap: true,
    },
  }, // add Vite configs TODO
  integrations: [
    mdx(),
    // db(),
    tailwind({ applyBaseStyles: false }),
    sitemap(),
    icon({
      iconDir: 'src/assets/icons', // user svgs stored in this path instead of src/icons
    }),
  ],
  experimental: {
    actions: true,
  },
});
