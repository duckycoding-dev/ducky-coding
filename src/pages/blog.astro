---
import HolyGrailLayout from '@layouts/HolyGrailLayout/HolyGrailLayout.astro';
import PostCard from '@components/Card/PostCard.astro';
import BriefPostCard from '@components/Card/BriefPostCard.astro';
import { getCollection } from 'astro:content';
import { type ImageMetadata } from 'astro';
import { matchImageFromGlobImport } from '@utils/images/images';
import { serverLogger } from '@utils/logs/logger';
import { postsService } from '../db/features/posts/posts.service';

const postsCollection = (await getCollection('posts')).map((entry) => ({
  id: entry.id,
  tags: entry.data.tags,
})); // in astro 5 "slug" became "id", which corresponds to the filename of the content file
const postsWithBannerImage = (
  await postsService.getPostsWithBannerBySlugs(
    postsCollection.map((post) => post.id),
  )
).filter(
  (postWithBannerImage) => postWithBannerImage.post.status === 'published',
);

const processedPostsWithImages = await Promise.all(
  postsWithBannerImage.map(async (post) => {
    let processedImage: ImageMetadata | undefined;
    const imageToFindPath = `${post.post.bannerImagePath}`;
    if (imageToFindPath) {
      const images = import.meta.glob<{ default: ImageMetadata }>(
        `/src/assets/images/posts/**/*.{jpeg,jpg,png,gif,webp,svg}`,
      );
      processedImage = await matchImageFromGlobImport(
        images,
        imageToFindPath,
        serverLogger,
      );
    }

    const postTags =
      postsCollection.find((p) => p.id === post.post.slug)?.tags || [];

    return {
      ...post,
      processedBannerImage: processedImage ?? null,
      tags: postTags,
    };
  }),
);

const featuredPosts = processedPostsWithImages.filter(
  ({ post }) => post.isFeatured,
);
---

<HolyGrailLayout
  seoProps={{
    title: 'Blog',
    description:
      "Welcome to DuckyCoding's blog: web development articles and guides at your fingertips.",
    extend: {
      meta: [
        {
          name: 'keywords',
          content: 'DuckyCoding, web development, astro, fullstack',
        },
      ],
    },
  }}
>
  <h1
    class='decoration-accent mb-8 text-center text-4xl font-extrabold underline underline-offset-4'
  >
    Welcome to my blog
  </h1>
  <p class='mb-8 text-center text-lg'>
    Here you will find articles and guides about web development and coding
    concepts.
    <br />
    Enjoy!
  </p>
  {
    processedPostsWithImages.length > 0 ? (
      <div class={`grid-layout ${featuredPosts.length ? 'gap-8' : ''}`}>
        <section class='[grid-area:latest]'>
          <h2 class='border-comic border-secondary from-accent-200 to-accent2-200 shadow-comic mb-4 rounded-xl border-4 bg-gradient-to-br px-4 py-2 text-4xl font-extrabold'>
            Latest posts
          </h2>
          <ul class='latest-grid-layout grid items-baseline gap-8'>
            {processedPostsWithImages.map(
              ({ post, image, tags, processedBannerImage }, i) => {
                return (
                  <li class={`${i === 0 ? '[grid-area:last-post]' : ''}`}>
                    <PostCard
                      class='block h-full'
                      post={post}
                      tags={tags}
                      bannerImage={processedBannerImage || null}
                      loading={i < 4 ? 'eager' : 'lazy'}
                      imageAlt={image?.alt || 'Banner image for ' + post.title}
                    />
                  </li>
                );
              },
            )}
          </ul>
        </section>
        {featuredPosts.length > 0 ? (
          <section class='trending'>
            <h2 class='border-comic border-secondary shadow-comic from-accent-100 to-accent3-100 mb-4 rounded-xl bg-gradient-to-br px-4 py-2 text-4xl font-extrabold'>
              Trending
            </h2>
            <ol class='flex flex-col gap-4'>
              {featuredPosts.map(({ post, tags }) => (
                <li>
                  <BriefPostCard post={post} tags={tags}>
                    {post.title}
                  </BriefPostCard>
                </li>
              ))}
            </ol>
          </section>
        ) : null}
      </div>
    ) : (
      <>
        <h2 class='mb-4 text-center text-2xl font-extrabold text-balance md:text-left'>
          <span class='block'>No content has been published yet :'(</span>
          <span class='block'>I'm working hard on it!</span>
        </h2>
        <h3 class='text-center text-xl font-extrabold md:text-left'>
          Check again soon! ðŸ¦†
        </h3>
      </>
    )
  }
</HolyGrailLayout>

<style
  define:vars={{
    showFeaturedPosts: featuredPosts.length ? 'minmax(0, 0.75fr)' : 'auto',
  }}
>
  .grid-layout {
    display: grid;

    grid-template-areas: 'latest trending';

    grid-template-columns: minmax(0, 2fr) var(--showFeaturedPosts);
    grid-template-rows: auto 1fr;
  }
  .latest-grid-layout {
    display: grid;
    grid-template-areas:
      'last-post'
      'latest';
  }
  @media (width >= 768px) {
    .latest-grid-layout {
      grid-template-areas:
        'last-post last-post'
        'latest latest';

      grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
      grid-template-rows: auto 1fr;
    }
  }

  @media (max-width: 976px) {
    .grid-layout {
      grid-template-columns: 1fr;
      grid-template-areas:
        'latest'
        'trending';
    }
    /* .trending {
      display: none;
    } */
  }
</style>
