---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { HTMLAttributes } from 'astro/types';
import { cn } from '@utils/cn';
import { IMAGE_COMMON_SIZES } from '@utils/globals';
import Card from '@components/Card/Card.astro';
import Tag from '@components/Tag/Tag.astro';
import DuckyCodingLogo from '@assets/images/DuckyCoding_logo.png';
import { getImageWidths } from '../../utils/images/images';

export interface ProjectCardProps extends HTMLAttributes<'div'> {
  title: string;
  summary: string;
  technologies: string[];
  bannerImage?: ImageMetadata | null;
  bannerImageClass?: string;
  imageAlt?: string;
  loading?: 'eager' | 'lazy';
  projectUrl?: string;
  linkActionTitle?: string;
}

interface Props extends ProjectCardProps {}

const {
  title,
  summary,
  technologies,
  bannerImage,
  bannerImageClass,
  class: className,
  loading = 'lazy',
  imageAlt,
  projectUrl,
  linkActionTitle = 'View Project',
  ...rest
} = Astro.props;
---

<Card class={cn('flex h-full flex-col', className)} {...rest}>
  <!-- Project Image/Banner -->

  <div
    class={cn(
      'from-accent to-accent2 z-0 flex h-48 min-h-48 w-full items-center justify-center bg-gradient-to-br transition-transform',
      bannerImageClass,
    )}
  >
    {
      (
        <Image
          src={bannerImage ?? DuckyCodingLogo}
          width={(bannerImage ?? DuckyCodingLogo).width}
          height={(bannerImage ?? DuckyCodingLogo).height}
          alt={imageAlt ?? `${title} project banner`}
          widths={getImageWidths((bannerImage ?? DuckyCodingLogo).width)}
          sizes={IMAGE_COMMON_SIZES}
          loading={loading}
          decoding={'async'}
          class='h-full w-full object-cover transition-transform duration-300 group-hover:scale-105'
        />
      )
    }
  </div>

  <!-- Project Content -->
  <div class='border-secondary z-1 flex h-full flex-col gap-3 border-t-4 p-4'>
    <!-- Title -->
    <h3 class='text-xl font-black'>{title}</h3>

    <!-- Summary -->
    <p class='text-secondary text-sm leading-relaxed'>{summary}</p>

    <!-- Technologies -->
    <div class='mb-2 flex flex-wrap gap-2'>
      {
        technologies.map((tech, index) => (
          <Tag
            class={`text-xs ${index % 2 === 0 ? 'bg-accent' : 'bg-accent2'}`}
          >
            {tech}
          </Tag>
        ))
      }
    </div>

    <!-- Project Link Badge -->
    {
      projectUrl && (
        <div class='mt-auto text-center'>
          <span class='bg-accent3 text-secondary group-hover:bg-accent3-700 rounded-lg px-3 py-1 text-xs font-semibold transition-colors'>
            {linkActionTitle} â†’
          </span>
        </div>
      )
    }
  </div>
</Card>
