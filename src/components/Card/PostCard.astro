---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { HTMLAttributes } from 'astro/types';
import DuckyCodingLogo from '@assets/images/DuckyCoding_logo.png';
import { cn } from '@utils/cn';
import { IMAGE_DENSITIES } from '@utils/globals';
import Card from '@components/Card/Card.astro';
import Link from '@components/Link/Link.astro';
import Tag from '@components/Tag/Tag.astro';
import type { Post } from '@db/features/posts/posts.model';

export interface PostCardProps extends HTMLAttributes<'a'> {
  post: Post;
  tags: string[];
  bannerImage?: ImageMetadata | null;
  imageAlt?: string | null;
  loading?: 'eager' | 'lazy';
}

interface Props extends PostCardProps {}

const { props }: { props: Props } = Astro;

const {
  post,
  tags,
  bannerImage,
  class: className,
  loading = 'lazy',
  imageAlt,
} = props;
---

<Link variant='unstyled' href={`/posts/${post.slug}`} class={cn(className)}>
  <Card class='card flex h-full flex-col'>
    <Image
      src={bannerImage ?? DuckyCodingLogo}
      width={bannerImage
        ? Math.floor(bannerImage.width / 3)
        : Math.floor(DuckyCodingLogo.width / 3)}
      height={bannerImage
        ? Math.floor(bannerImage.height / 3)
        : Math.floor(DuckyCodingLogo.height / 3)}
      alt={imageAlt ?? 'Post banner image'}
      densities={IMAGE_DENSITIES}
      loading={loading}
      decoding={'async'}
      class='bg-primary-700 aspect-[16/9] w-full object-cover'
    />
    <footer
      class='border-secondary flex grow flex-col gap-2 border-t-4 pt-2.5 pb-4'
    >
      <h2 class='px-5 text-2xl font-black'>
        {post.title}
      </h2>
      <section>
        <p class='border-secondary px-5 text-base font-semibold'>
          <span
            >Written by: {
              post.author.toLowerCase() === 'duckycoding'
                ? 'DuckyCoding (me)'
                : post.author
            }</span
          >
        </p>
        <p class='px-5 text-sm italic'>
          Read time: {post.timeToRead}
          {post.timeToRead > 1 ? 'minutes' : 'minute'}
        </p>
        {
          post.createdAt ? (
            <p class='px-5 text-sm italic'>
              {new Date(post.createdAt).toLocaleDateString()}
            </p>
          ) : null
        }
      </section>
      <section
        class='tags border-secondary mt-auto flex flex-wrap justify-end gap-2 px-5 text-sm font-semibold'
      >
        {
          tags.map((tag) => (
            <Tag class='odd:bg-accent even:bg-accent2'>{tag}</Tag>
          ))
        }
      </section>
    </footer>
  </Card>
</Link>

<style>
  @reference '@styles/global.css';
  .card {
    container-name: card;
    container-type: inline-size;
  }
  @container card (width > 400px) {
    .tags {
      @apply text-xl;
    }
  }
</style>
